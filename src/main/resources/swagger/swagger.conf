openapi: 3.0.3
info:
  title: Customer-Office-System API
  description: API for managing customers, documents, offices, and counters in a service system.
  version: 1.0.0
paths:
  /api/customer/create:
    post:
      summary: Create a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
      responses:
        '200':
          description: Customer created successfully
          content:
            text/plain:
              schema:
                type: string
  /api/customer/delete:
    delete:
      summary: Delete a customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCustomerRequest'
      responses:
        '200':
          description: Customer deleted successfully
          content:
            text/plain:
              schema:
                type: string
  /api/customer/setDoc:
    post:
      summary: Set required documents for a customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDocumentsRequest'
      responses:
        '200':
          description: Required documents updated successfully
          content:
            text/plain:
              schema:
                type: string
  /api/document/create:
    post:
      summary: Create a new document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDocumentRequest'
      responses:
        '200':
          description: Document created successfully
          content:
            text/plain:
              schema:
                type: string
  /api/document/delete:
    delete:
      summary: Delete a document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDocumentRequest'
      responses:
        '200':
          description: Document deleted successfully
          content:
            text/plain:
              schema:
                type: string
  /api/document/get:
    post:
      summary: Retrieve a document by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDocumentRequest'
      responses:
        '200':
          description: Document retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
  /api/office/create:
    post:
      summary: Create a new office
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOfficeRequest'
      responses:
        '200':
          description: Office created successfully
          content:
            text/plain:
              schema:
                type: string
  /api/office/delete:
    delete:
      summary: Delete an office
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOfficeRequest'
      responses:
        '200':
          description: Office deleted successfully
          content:
            text/plain:
              schema:
                type: string
  /api/office/close:
    post:
      summary: Close an office
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfficeStatusRequest'
      responses:
        '200':
          description: Office closed successfully
          content:
            text/plain:
              schema:
                type: string
  /api/office/open:
    post:
      summary: Open an office
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfficeStatusRequest'
      responses:
        '200':
          description: Office opened successfully
          content:
            text/plain:
              schema:
                type: string
  /api/office/status:
    post:
      summary: Retrieve the status of an office
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfficeStatusRequest'
      responses:
        '200':
          description: Office status retrieved successfully
          content:
            application/json:
              schema:
                type: boolean
  /api/counter/create:
    post:
      summary: Create a new counter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCounterRequest'
      responses:
        '200':
          description: Counter created successfully
          content:
            text/plain:
              schema:
                type: string
  /api/counter/delete:
    delete:
      summary: Delete a counter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCounterRequest'
      responses:
        '200':
          description: Counter deleted successfully
          content:
            text/plain:
              schema:
                type: string

components:
  schemas:
    CreateCustomerRequest:
      type: object
      properties:
        name:
          type: string
        userName:
          type: string
        pass:
          type: string
      required: [name, userName, pass]
    DeleteCustomerRequest:
      type: object
      properties:
        id:
          type: integer
      required: [id]
    SetDocumentsRequest:
      type: object
      properties:
        customerId:
          type: integer
        docIds:
          type: array
          items:
            type: integer
      required: [customerId, docIds]
    CreateDocumentRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        dependencies:
          type: array
          items:
            type: integer
      required: [name, description]
    DeleteDocumentRequest:
      type: object
      properties:
        id:
          type: integer
      required: [id]
    GetDocumentRequest:
      type: object
      properties:
        id:
          type: integer
      required: [id]
    Document:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        dependencies:
          type: array
          items:
            type: integer
    CreateOfficeRequest:
      type: object
      properties:
        name:
          type: string
        counterNo:
          type: integer
      required: [name, counterNo]
    DeleteOfficeRequest:
      type: object
      properties:
        id:
          type: integer
      required: [id]
    OfficeStatusRequest:
      type: object
      properties:
        id:
          type: integer
      required: [id]
    CreateCounterRequest:
      type: object
      properties:
        officeId:
          type: integer
        name:
          type: string
        docId:
          type: integer
      required: [officeId, name, docId]
    DeleteCounterRequest:
      type: object
      properties:
        id:
          type: integer
      required: [id]
